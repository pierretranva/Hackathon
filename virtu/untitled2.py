# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cZWTQIU8rNvo0oY8jrS1FPinOejadOga
"""

import pandas as pd
from sklearn.cluster import KMeans
import csv
import numpy as np
from math import cos


def print_values() -> dict:
    ghgdf = pd.read_excel("ghgpdata2021.xlsx", sheet_name="Direct Emitters", header=3)

    k = 10
    nonnadistances = ghgdf.iloc[:, 8:11].dropna()
    distances = nonnadistances[["Latitude", "Longitude"]]
    KM = KMeans(n_clusters=k)
    KMfit = KM.fit(distances)
    classes = KMfit.labels_
    centers = KMfit.cluster_centers_
    nonnadistances["labels"] = classes

    out = {}
    cluster_densities = []
    cluster_sums = []
    for i in range(k):
        i_df = nonnadistances[nonnadistances["labels"] == i]
        i_emissions = i_df.iloc[:, 2]
        i_lat = i_df.iloc[:, 0]
        i_long = i_df.iloc[:, 1]
        lat_q1, lat_q3 = np.percentile(i_lat, [25, 75])
        dlat = (lat_q3 - lat_q1) * 110
        long_q1, long_q3 = np.percentile(i_long, [25, 75])
        dlong = (long_q3 - long_q1) * 110
        # print(lat_q1, lat_q3, long_q1, long_q3, dlat, dlong, i_lat.mean())

        i_area = dlat * dlong

        # Maybe do density of emissions? total emissions / area covered by cluster
        cluster_densities.append(i_emissions.sum() / i_area)
        cluster_sums.append(i_emissions.sum())

    for i in range(k):
        out[i] = [
            round(centers[i, 0], 2),
            round(centers[i, 1], 2),
            round(cluster_densities[i], 0),
            round(cluster_sums[i], 0),
        ]
    return out


print(print_values())
